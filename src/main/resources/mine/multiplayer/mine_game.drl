package drools.common

import drools.common.*
import com.gemantic.killer.common.model.Message
import com.gemantic.killer.common.model.Operater;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.HashSet;
import net.sf.json.JSONObject;
import net.sf.json.JSONSerializer;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.lang.math.RandomUtils;
import org.apache.commons.lang.StringUtils;
import com.gemantic.killer.util.*;
import com.gemantic.common.drools.util.LogUtil;










#========================query group start =========================














#这个是按动作来分的.其实也应该按结果来分.分成角色初始化的规则.权限规则,
rule 'bomb assign'
ruleflow-group "game init"
when
	
    $message:Message(predict=="start",$time:time)
    
    #找出所有的准备的玩家,update person 会导致...规则重新执行啊
    $allReadys:ArrayList()
	      from accumulate(
	      $person:Player(status=="ready")	     
	      init(List ls=new ArrayList();),
	      action(ls.add($person);),
	      result(ls)
	      );
    
    $room:Room(status=="unrun")    
     $operater:Operater()
then      
	#和分配角色类似.但是却是要分配雷的数目
	LogUtil.log("bomb assign  =================");
	LogUtil.log($allReadys);
	 int  rowCount=Integer.valueOf(getRoomSetting($room,"行数","9"));#1*60*1000  
	 int  columnCount=Integer.valueOf(getRoomSetting($room,"列数","9"));#1*60*1000  
	 int  bombCount=Integer.valueOf(getRoomSetting($room,"雷数","10"));#1*60*1000  

     String systemBombPic=BombUtil.assign(rowCount,columnCount,bombCount);
     LogUtil.log(" systemBombPic ================= "+systemBombPic);
     BombPic bombPic=new BombPic(systemBombPic,"");
     insert(bombPic);//这个是固定不变的
     
	
	String	rname=String.valueOf(RandomUtils.nextLong());	
	
	
	Game game=new Game("run",System.currentTimeMillis(),0L,$time,rname, $allReadys.size());
	insert(game);
	
	LogUtil.log(" game status  ================="+game);
	
	Count count=new Count(0,bombCount,rowCount*columnCount);
	insert(count);
	
	$room.setStatus("run");	
	update($room);
	$operater.setGameStart(true);
	Message initMessage=new Message("","init",systemBombPic);
	insert(initMessage); 
	
	LogUtil.log("role assign process over  =================");
end


#这个是按动作来分的.其实也应该按结果来分.分成角色初始化的规则.权限规则,
rule 'clear tag'
ruleflow-group "game init"
when
	
    $message:Message(predict=="start",$time:time)   
    $room:Room(status=="unrun")    
    $operater:Operater()
    $tag:Tag()   
then      
	#和分配角色类似.但是却是要分配雷的数目
	LogUtil.log("clear tag start  =================");	
    retract($tag);

	LogUtil.log("clear tag over  =================");
end





rule 'start game right'
ruleflow-group "game right"
no-loop true
when

    $message:Message(predict=="start");
    $person:Player($id:id)
    $right:Right(id==$id)
    

	
then      
    LogUtil.log("start game right   start ============= "+$message);
    
	$right.setRight(convertString2Set("say"));
	LogUtil.log(" =============");
	$right.setIsNotify(false);
    LogUtil.log(" ============="+$right);
    update($right);#最烦的就是这个啊.Update之后又要重新执行.
    LogUtil.log(" =============");    
    LogUtil.log("start game right  over =============");
end


#分解Action
rule 'game over right'
ruleflow-group "game right"
no-loop true
when
	
	$message:Message(predict=="over")
	not Game()
	$room:Room($creater:creater)
    $person:Player($id:id)
    $right:Right(id==$id)

then      
    LogUtil.log("game over  right start   =============");
    $right.setRight(convertString2Set("say,ready"));
    $right.setIsNotify(false); 		
    update($right);#最烦的就是这个啊.Update之后又要重新执行.
   
    LogUtil.log("game over  right  over =============");
end









#========================action group start =========================
/*支持以下几种动作.
1.单击.如果是雷就爆炸.如果不是雷,就显示出Pane的数字.如果数字为0.就自动展示周围的Pane


*/

#单击Pane,单击完之后才能判断是否可以双击 ,应该是用户每占击一次.我都要存一个Tag的对象.最初想的是用一个字符串来处理.是否考虑加入到字符串呢?是字符串快一些.还是规则快一些?
rule 'click pane'
ruleflow-group "user action"
no-loop true
when
    $message:Message($subject:subject,$object:object,predict=="click")   
    $bombPic:BombPic($system:system,$user:user)    
    $room:Room() 
then
    LogUtil.log("click pane start  ================="); 
    
     Pair p=BombUtil.convertString2Pair($object);   
     
     int  rowCount=Integer.valueOf(getRoomSetting($room,"行数","9"));#1*60*1000  
     LogUtil.log("=========");
	 int  columnCount=Integer.valueOf(getRoomSetting($room,"列数","9"));#1*60*1000  	 
	 
	  LogUtil.log("=========");
    String userTag=BombUtil.clickOpen(p,$system,rowCount,columnCount);     
   
    //  LogUtil.log("=========");
    Click click=new Click($subject,userTag,$object);
      LogUtil.log("=========");
    insert(click);     
   // Tag tag=new Tag($subject,pane,BombUtil.convertPair2String(pane.getCoordinate()));
    //  LogUtil.log("=========");
  //  insert(tag);   
    
    retract($message);
    
    LogUtil.log("click pane over  ================="); 
end


#tag Pane 未标记过
rule 'tag pane'
ruleflow-group "user action"
no-loop true
when
     $room:Room()
    $message:Message($subject:subject,$object:object,predict=="tag")
    $bombPic:BombPic($system:system,$user:user)    
    not Tag(pid==$object)
    $count:Count($bomb:bomb)
then
    LogUtil.log("tag pane start  ================="); 
     Pair p=BombUtil.convertString2Pair($object);
     insert(p);
      int  rowCount=Integer.valueOf(getRoomSetting($room,"行数","9"));#1*60*1000  
      LogUtil.log("=========");
	 int  columnCount=Integer.valueOf(getRoomSetting($room,"列数","9"));#1*60*1000  
    String userTag=BombUtil.clickOpen(p,$system,rowCount,columnCount);    
        
    Message tagMessage=new Message($object,"mine","#");
    insert(tagMessage);     
    $bomb=$bomb+1;    
    $count.setBomb($bomb);
    update($count);
    LogUtil.log("count is   ================="+$count);
    Tag tag=new Tag($subject,"#",$object);
    insert(tag);
    retract($message);
    
    LogUtil.log("tag pane over  ================="); 
end

#tag Pane
rule 'clear tag pane'
ruleflow-group "clear tag action"
no-loop true
when
     $room:Room()
    $message:Message($subject:subject,predict=="tag",$object:object)  
    $count:Count($bomb:bomb)
    $tag:Tag(pid==$object,value=="#")
       
then
    LogUtil.log("clear tag pane start  ================="); 
   
    $bomb=$bomb-1;
    $count.setBomb($bomb);
    update($count);
    retract($tag);
    retract($message);
    Message m=new Message($object,"mine","clear");
    insert(m);
    
    LogUtil.log("clear tag pane over  ================="); 
end






#double Pane.周围必须全部是空或标为雷,才可以点击.否则不能点
rule 'double click pane'
ruleflow-group "user action"

when
    $message:Message($subject:subject,predict=="double click",$object:object)
    $bombPic:BombPic($system:system,$user:user) 
    $room:Room()
   
then
    LogUtil.log("double click pane start  ================= "+$object+" system "+ $system);
 
        Pair pair=BombUtil.convertString2Pair($object);
     int  rowCount=Integer.valueOf(getRoomSetting($room,"行数","9"));#1*60*1000  
      LogUtil.log("=========");
	 int  columnCount=Integer.valueOf(getRoomSetting($room,"列数","9"));#1*60*1000  
	  LogUtil.log("=========");
    List<Pair> roundPanes=BombUtil.getRoundPanes(pair,rowCount,columnCount);
     LogUtil.log("=========");
      LogUtil.log("roundPanes  ================= "+roundPanes);
    boolean doubleClick=true;
    for(Pair p:roundPanes){
       LogUtil.log(p);
       String tag=BombUtil.clickOpen(p,$system,rowCount,columnCount);     
       Pane pane=new Pane(BombUtil.convertPair2String(p),p,tag,"" ); //怎么才能知道有没有用户的标记呢.
    
       Click click=new Click($subject,tag,BombUtil.convertPair2String(pane.getCoordinate()));
       insert(click);  
      
    } 
   
    
    
    LogUtil.log("double click pane over  ================="); 
end






#点到非空数字了,周围有雷的.必须是用户没有标记为Tag的?
rule 'click number'
ruleflow-group "click action"

when
    $click:Click($pid:pid,value != "0" && value != "*")    
    not Tag(pid==$pid)   
    $bombPic:BombPic()    
    $game:Game() 
     $room:Room()
      
then
    LogUtil.log("click number  start  =================");   
   
    
    
     Message tagMessage=new Message($pid,"mine",$click.getValue()); 
     insert(tagMessage);       
  
    Tag tag=new Tag($click.getUid(),$click.getValue(),$pid);
     insert(tag);
     
    retract($click); 
    LogUtil.log("click number over  ================="); 
end


#点到空数字了,周围没有雷的
rule 'click zero number'
ruleflow-group "click action"
when
    $click:Click($pid:pid,value == "0")  
    $bombPic:BombPic($system:system,$user:user)
    not Tag(pid==$pid)    
    not Message(subject==$pid,predict=="mine")
    $game:Game()    
    $room:Room()
then
    LogUtil.log("click  zero number  start  ================= "+$click);   
     int  rowCount=Integer.valueOf(getRoomSetting($room,"行数","9"));#1*60*1000  
      LogUtil.log("=========");
	 int  columnCount=Integer.valueOf(getRoomSetting($room,"列数","9"));#1*60*1000  
	 Pair pair=BombUtil.convertString2Pair($pid);
    List<Pair> roundPanes=BombUtil.getRoundPanes(pair,rowCount,columnCount);
      LogUtil.log("list pair is   ================= "+roundPanes);  
    for(Pair p:roundPanes){
    
       String value=BombUtil.clickOpen(p,$system,rowCount,columnCount); 
       Click click=new Click($click.getUid(),value,BombUtil.convertPair2String(p));
       insert(click);
    }    
       
     Message tagMessage=new Message($pid,"mine",$click.getValue()); 
     insert(tagMessage); 
     
       Tag tag=new Tag($click.getUid(),$click.getValue(),$pid);
     insert(tag);
      retract($click);
    LogUtil.log("click zero number over  ================="); 
end









#点到雷了
rule 'click mine'
ruleflow-group "game status"

when
    $click:Click(value=="*",$pid:pid)
   
     
    $bombPic:BombPic($system:system,$user:user)    
    $game:Game($recordName:recordName)
  
    $count:Count()
    
then
    LogUtil.log("click mine start  ================="); 
    //游戏结束了   
     retract($click);
               
     Message tagMessage=new Message($pid,"mine","bomb"); 
     insert(tagMessage); 
     
     Message gameOverMessage=new Message($recordName,"over","you lose"); 
     insert(gameOverMessage); 
      
     $game.setStatus("over");
     update($game);
    
   
    LogUtil.log("click mine over  ================="); 
end







#用户已经点开过的,直接销毁Click
rule 'taged click zero number'
ruleflow-group "clear click"
when
    $click:Click($pid:pid) 
    $game:Game()    
    $room:Room()
then
    LogUtil.log("taged click  zero number  start  ================= "+$click);   
     
      retract($click);
    LogUtil.log("taged click zero number over  ================="); 
end


#游戏结束.赢了
rule 'complete'
ruleflow-group "game status"

when
    $bombPic:BombPic()
    $game:Game($recordName:recordName)    
    $count:Count($all:all,$bomb:bomb)    
    eval($bomb==$all)
    
    
then
    LogUtil.log("click mine start  ================="); 
    //游戏结束了  
   
     Message gameOverMessage=new Message($recordName,"over","win"); 
     insert(gameOverMessage); 
   
     
     $game.setStatus("over");
     update($game);
     
     
   
    LogUtil.log("click mine over  ================="); 
end







rule 'player logout  process count'
ruleflow-group "person count"
no-loop true
when
 $game:Game($playerCount:playerCount);
 $message:Message($subject:subject,predict=="logout")

then  
     LogUtil.log(" logout game live count start  ================="); 
      
     
    $game.setPlayerCount($playerCount-1);   
     update($game);
     LogUtil.log(" logout game live count over  ================="+$game); 
end


rule 'no player game over'
ruleflow-group "game status"
no-loop true
when
 $game:Game(playerCount<=0,status=="run",$recordName:recordName);
  $operater:Operater()  
  
 
then  
     LogUtil.log("no player game over start  ================="); 
      
     Message gameOverMessage=new Message($recordName,"over","lose"); 
     insert(gameOverMessage); 
           
     $game.setStatus("over");
     update($game);   
     LogUtil.log("no player game over over  ================="); 
end



#游戏结束.赢了
rule 'game over process'
ruleflow-group "game status"

when
    
    $game:Game($recordName:recordName,status=="over")    
    $operater:Operater()  
    $count:Count()   
    $bombPic:BombPic($system:system,$user:user)
    $room:Room() 
   
    
then
    LogUtil.log("game over processstart  ================="); 
    //游戏结束了  
     retract($game);
     retract($count);
     retract($bombPic);   
    
     $room.setStatus("unrun"); 
     update($room);
     
     $operater.setGameOver(true);
     $operater.setRecordID(Long.valueOf($recordName));  
   
    LogUtil.log("game over process over  ================="); 
end



rule 'game over status '

ruleflow-group "game status"
when
     Game(status=="over") 
     $person:Player(status!="unready");
     
then 
     LogUtil.log("game over status start  ================="); 
    $person.setStatus("unready");   
    update($person);   
    
  
    LogUtil.log("game over status over  ================="); 
end








#========================game status group over =========================







#========================message group start =========================




rule 'time operater '
ruleflow-group "time of operater"
#基本上所有的命令都是发给全部人的,除了几个特别的需要处理的(Say:单个人,杀人) 这个可以考虑要不要是用流程呢.这个跟业务逻辑相关.不能统一写到这里的.
when
	#conditions	
    $message:Message($subject:subject,predict=="send time")
    $room:Room($rid:id,status=="run")//如果是不运行了.就没有必要发送Timer信息了
    $operater:Operater()
then      
    LogUtil.log("time operater  start  =============");   
    
    $message.setPredict("time");
    $message.setWhere($rid);
    #$message.setTime(System.currentTimeMillis());#记录消息的发送时间,靠这个来完成消息的记录    
	$operater.getTimerMessages().add($message);		

    LogUtil.log("time operater over =============");
  
end







rule 'game player query'
ruleflow-group "query"
when
	#conditions
    $message:Message($subject:subject,predict=="query")
    $room:Room(status=="run")
    $allLogins:ArrayList()
	      from accumulate(
	      $person:Player()	     
	      init(List ls=new ArrayList();),
	      action(ls.add($person);),
	      result(ls)
	      );
	$game:Game($status:status);  
    $operater:Operater()
    $bombPic:BombPic()   
  
    $tags:ArrayList()
	      from accumulate(
	      $tag:Tag()	     
	      init(List ls=new ArrayList();),
	      action(ls.add($tag);),
	      result(ls)
	      );
  
   
    
    
then      

	 LogUtil.log("get player query info =================");	 
      Map m=new HashMap();
      m.put("room",$room);
      m.put("person",$allLogins);     
      setRemainTime($status+"Time",$game,$room) ; 
      m.put("game",$game);     
     int  rowCount=Integer.valueOf(getRoomSetting($room,"行数","9"));	 
     int  columnCount=Integer.valueOf(getRoomSetting($room,"列数","9"));
     String bomb=BombUtil.initBomb(rowCount,columnCount);
     for(Object o:$tags){
        Tag tag=(Tag)o;
       Pair p=  BombUtil.convertString2Pair(tag.getPid());
        int index=BombUtil.convertIndex((Integer)p.fst, (Integer)p.snd, rowCount);
		bomb=BombUtil.replaceBomb(index, bomb, tag.getValue());
      } 
      $bombPic.setUser(bomb);
      m.put("bomb",$bombPic); 
      
       
      JSONObject json4=JSONObject.fromObject(m);        
      $operater.setSnapshots(json4.toString());     
      retract($message);   
	  LogUtil.log("get player query info over =================");
end












#========================message group over =========================


  