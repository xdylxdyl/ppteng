package drools.common

import drools.common.*
import java.util.List;
import java.util.Set;
import java.util.HashSet;
import java.util.Map;
import java.util.Collections;



import org.apache.commons.lang.StringUtils;




function void setRemainTime(String status,Game game,Room room) {

     if("day"==status){
       status="dayTime";
     };
     
     if("topic"==status){
       status="topicTime";
     };
     
        if("question"==status){
       status="questionTime";
     };
     
     
     Long setting=Long.valueOf(getRoomSetting(room,status,"-1"));
      Long lastTime=game.getLastTime();
      Long time=lastTime+setting-System.currentTimeMillis();
      if(time < 0){
            LogUtil.log("=========== error ======= "+time);          
      }else{
          game.setRemainTime(time);
      }
     
       
}



function List<String>  getIDFromPlayer(List players) {

      List<String> pids=new ArrayList();
	    for(Object o:players){
	          Player p=(Player)o;			 
			  pids.add(p.getId());
		}
		return pids;
}




function Message createDelayDay(Room room) {

    String  time=getRoomSetting(room,"dayTime","30000");//1*60*1000 
    Message night=new Message("day","switch",time);
    String  schedule=getRoomSetting(room,"dayTime","30000");//1*60*1000
    night.setScheduledTime(Long.valueOf(schedule));
    night.setWhere(room.getId());
    
    return night;
  
}

function Message createDelayDayOfTopic(Room room) {

    String  time=getRoomSetting(room,"dayTime","30000");//1*60*1000 
    Message night=new Message("day","switch",time);
    String  schedule=getRoomSetting(room,"topicTime","15000");//1*60*1000
    night.setScheduledTime(Long.valueOf(schedule));    
     night.setWhere(room.getId());
    
    return night;
  
}

function Message createDelayAnnounceOfQuestion(Room room) {

  
    Message night=new Message("king","announce","water");
    String  schedule=getRoomSetting(room,"questionTime","15000");//1*60*1000
    night.setScheduledTime(Long.valueOf(schedule));    
    night.setWhere(room.getId());
    
    return night;
  
}




function Message createDay(Room room) {
    String  dayTime=getRoomSetting(room,"dayTime","30000");//1*60*1000
    Message day=new Message("day","time",dayTime);
 
     return day;
   
  
}


    
    function Message createTopic(Room room) {
    String  dayTime=getRoomSetting(room,"topicTime","30000");//1*60*1000
    Message day=new Message("topic","time",dayTime);
 
     return day;
   
  
}
    function Message createQuestion(Room room) {
    String  dayTime=getRoomSetting(room,"questionTime","30000");//1*60*1000
    Message day=new Message("question","time",dayTime);
 
     return day;
   
  
}

  

   
   
    function String parseTopic(String topic, String role) {
     String[] contents=topic.split(" ");
     if(contents.length<2){
         return null; 
     
     }
     if("water".equals(role)){
        return contents[0]; 
     
     }else{
        return contents[1]; 
     
     }
    
   
  
}  
   













