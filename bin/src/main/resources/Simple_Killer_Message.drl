package com.gemantic.killer.common.model

import com.gemantic.killer.common.model.Message;
import com.gemantic.killer.common.model.Status;
import com.gemantic.killer.common.model.Role;
import com.gemantic.killer.common.model.Rights;
import com.gemantic.killer.common.model.Resource;
import com.gemantic.killer.common.model.Operater;
import com.gemantic.killer.common.model.World;
import com.gemantic.killer.model.Room;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.List;
import java.lang.Integer;

function  List createMessage(Long subject,String predict,String contents) {

      List<Message> msgs=new ArrayList();      
	  String[] right=contents.split(",");
	  for(String r:right){
	    Message msg=new Message(subject,predict,r);
	    msgs.add(msg);
	  }
	
	 
return msgs;


}


#开始游戏	
rule "start game"
	
	lock-on-active
	when
	    $room:Room()
	    $world:World()
	    $operate:Operater()
	    $message:Message(predict=="start") 
	            from $operate.getMessage()
	            
                       
	    
	    $all_login_ids:ArrayList()
	      from accumulate(
	      $login_message:Message(predict=="login",$id:subject)
	      from $room.getMessages(),
	      init(List ls=new ArrayList();),
	      action(ls.add($id);),
	      result(ls)
	      );
		
	then
		
		#分配角色,初始化人物状态，被投票人数
		Collections.shuffle((ArrayList)$all_login_ids);
		for(int i = 0; i < $all_login_ids.size(); i++ ){
		
			Long eachId = (Long)$all_login_ids.get(i);
			if( i <= 0 ){
				List<Message> rightsMsg = createMessage(eachId,"right","say,vote");
				List<Message> roleMsg = createMessage(eachId,"role","killer");
				List<Message> statusMsg = createMessage(eachId,"status","live");
				
				$world.getMessages().addAll(rightsMsg);
				$world.getMessages().addAll(roleMsg);
				$world.getMessages().addAll(statusMsg);
				
				#发送角色信息
				for( Message rolemsg: roleMsg){
					List<Long> ids = new ArrayList();
					ids.add(eachId);
					rolemsg.setAccepts(ids);
					$operate.getNextMessages().add(rolemsg);
				}
							
				#发送权利信息
				for( Message rightMessage: rightsMsg){
					List<Long> ids = new ArrayList();
					ids.add(eachId);
					rightMessage.setAccepts(ids);
					$operate.getNextMessages().add(rightMessage);
				}
			}else{
				List<Message> rightsMsg = createMessage(eachId,"right","say,vote");
				List<Message> roleMsg = createMessage(eachId,"role","water");
				List<Message> statusMsg = createMessage(eachId,"status","live");
				
				$world.getMessages().addAll(rightsMsg);
				$world.getMessages().addAll(roleMsg);
				$world.getMessages().addAll(statusMsg);
				
			}
		}
		
		#发送消息start	   
		Message send_start_message=(Message)$message.clone();
		send_start_message.setAccepts($all_login_ids);
		$operate.getNextMessages().add(send_start_message); 

	  	
	  	#发送天光大亮
	  	Message send_day_message=(Message)$message.clone();
	  	send_day_message.setPredict("day");
		send_day_message.setAccepts($all_login_ids);
		$operate.getNextMessages().add(send_day_message);
		
	  	#生成定时Message
	  	Message timer_over_msg=new Message(-500L,"night","晚上开始");
	  	timer_over_msg.setVersion( $message.getVersion());
	  	timer_over_msg.setWhere($room.getId());
	  	#四分钟
	  	timer_over_msg.setTime(4*60*1000L);
	  	timer_over_msg.setAccepts($all_login_ids);
	  	$operate.getTimerMessages().add(timer_over_msg);
		
		update($operate);		 

		System.out.println(" start game ");
		
	end
	
	
#晚上开始	
rule "night"
	
	lock-on-active
	when
	    $room:Room()
	    $world:World()
	    $operate:Operater()
	    $message:Message(predict=="night") 
	            from $operate.getMessage()
	            
                       
	    
	    $all_login_ids:ArrayList()
	      from accumulate(
	      $login_message:Message(predict=="login",$id:subject)
	      from $room.getMessages(),
	      init(List ls=new ArrayList();),
	      action(ls.add($id);),
	      result(ls)
	      );
		
	then
		
		#分配权利,杀手杀人
		for(int i = 0; i < $all_login_ids.size(); i++ ){
		
			Long eachId = (Long)$all_login_ids.get(i);
			//night ,killer's right
			for( Message eachMessage : $world.getMessages()){
			    if( eachMessage.getPredict().equals("killer") ){
					List<Message> rightsMsg = createMessage(eachId,"right","kill");
					$world.getMessages().addAll(rightsMsg);
				}
			}
		}
		
		
	  	#生成定时Message到白天
	  	Message timer_over_msg=new Message(-500L,"day","白天开始");
	  	timer_over_msg.setVersion( $message.getVersion());
	  	timer_over_msg.setWhere($room.getId());
	  	#2分钟
	  	timer_over_msg.setTime(2*60*1000L);
	  	timer_over_msg.setAccepts($all_login_ids);
	  	$operate.getTimerMessages().add(timer_over_msg);
		
		update($operate);		 

		System.out.println(" night is coming... ");
		
	end	
	
#投票	
rule "vote"
	
	lock-on-active
	when
	    $room:Room()
	    $world:World()
	    $operate:Operater()
	    $message:Message(predict=="vote",$object:object,$subject:subject) 
	            from $operate.getMessage()
	            
                       
	    
	    $all_login_ids:ArrayList()
	      from accumulate(
	      $login_message:Message(predict=="login",$id:subject)
	      from $room.getMessages(),
	      init(List ls=new ArrayList();),
	      action(ls.add($id);),
	      result(ls)
	      );
		
	then
		
		#被投票人数	
		String subjectStr = String.valueOf($subject);	
		List<Message> rightsMsg = createMessage($object,"voted",subjectStr);
		$world.getMessages().addAll(rightsMsg);

		#发送投票消息

	  	Message vote_msg=new Message($subject,"vote","我投票了");
	  	vote_msg.setAccepts($all_login_ids);
	  	$operate.getNextMessages().add(vote_msg);
		
		update($operate);		 

		System.out.println(" night is coming... ");
		
	end	

